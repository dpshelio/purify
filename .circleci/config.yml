version: 2
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: ubuntu:14.04
        environment:
          OMP_NUM_THREADS: 4
          LDFLAGS: '-pthread'
          CC: gcc-7
          CXX: g++-7


    working_directory: ~/repo

    steps:
      - checkout

      # # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "requirements.txt" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            sudo apt update
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test
            sudo add-apt-repository ppa:
            sudo apt-get update
            sudo apt install -y g++-7 libtiff5-dev libgomp1 libfftw3-dev libboost-all-dev libeigen3-dev libyaml-cpp-dev

      - run:
          name: build openmpi
          command: |
            cwd=$(pwd)
            cd /tmp
            curl -O https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.1.tar.bz2
            tar jxf openmpi-3.1.1.tar.bz2
            cd openmpi-3.1.1
            ./configure --prefix=/usr
            sudo make all install
            cd $cwd

      # - save_cache:
      #     paths:
      #       - ./venv
      #     key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Build
          command: |
            mkdir build
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release -Dtests=ON -Dexamples=OFF \
            -Ddompi=ON -Dopenmp=ON -Ddocs=OFF -Dbenchmarks=OFF \
            -DSopt_GIT_REPOSITORY=https://github.com/astro-informatics/sopt.git \
            -DSopt_GIT_TAG=development \
            -DCFitsIO_URL=https://github.com/UCL-RITS/BinaryBlobs-dependencies/raw/master/Astronomy/cfitsio3410.tar.gz \
            -DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4

      - run:
          name: run tests
          command: |
            ctest -T test --output-on-failure -V

      - store_artifacts:
          path: test-reports
          destination: test-reports
